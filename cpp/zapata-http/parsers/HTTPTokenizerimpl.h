/*
    This file is part of Zapata.

    Zapata is free software: you can redistribute it and/or modify
    it under the terms of the Lesser GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Zapata is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
*/

// Generated by Bisonc++ V4.04.01 on Sun, 23 Mar 2014 13:54:15 +0000

    // Include this file in the sources of the class HTTPTokenizer.
#pragma once

// $insert class.h
#include "HTTPTokenizer.h"
#include <exceptions/SyntaxErrorException.h>

// $insert namespace-open
namespace zapata
{

inline void HTTPTokenizer::error(char const *msg)
{
    //std::cerr << msg << '\n';
   throw zapata::SyntaxErrorException(string(msg));

}

// $insert lex
inline int HTTPTokenizer::lex()
{
    return d_scanner.lex();
}

inline void HTTPTokenizer::print()
{
    print__();           // displays tokens if --print was specified
}

inline void HTTPTokenizer::exceptionHandler__(std::exception const &exc)
{
    throw;              // re-implement to handle exceptions thrown by actions
}

// $insert namespace-close
}

    // Add here includes that are only required for the compilation
    // of HTTPTokenizer's sources.


// $insert namespace-use
    // UN-comment the next using-declaration if you want to use
    // symbols from the namespace zapata without specifying zapata::
//using namespace zapata;

    // UN-comment the next using-declaration if you want to use
    // int HTTPTokenizer's sources symbols from the namespace std without
    // specifying std::

//using namespace std;
